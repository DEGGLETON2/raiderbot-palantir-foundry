name: raiderbot-palantir-foundry
description: German Shepherd AI Assistant for Transportation Operations

# Foundry workspace configuration
workspace:
  name: raider-express-operations
  description: RaiderBot AI Platform for Raider Express
  owner: raider-express
  environment: production

# Dataset configuration
datasets:
  raider_deliveries:
    type: foundry_dataset
    path: /raider-express/data/deliveries
    refresh: "*/15 * * * *"  # Every 15 minutes
    
  raider_drivers:
    type: foundry_dataset
    path: /raider-express/data/drivers
    refresh: "*/30 * * * *"  # Every 30 minutes
    
  raider_vehicles:
    type: foundry_dataset
    path: /raider-express/data/vehicles
    refresh: "*/30 * * * *"  # Every 30 minutes
    
  raider_kpi_dashboard:
    type: foundry_dataset
    path: /raider-express/analytics/kpi
    refresh: "*/5 * * * *"   # Every 5 minutes

# Function configuration
functions:
  raiderbot_test:
    type: foundry_function
    path: python-functions/python/python-functions/raiderbot_test.py
    memory: 1024
    timeout: 60
    
  cascade_verification:
    type: foundry_function
    path: python-functions/python/python-functions/cascade_verification.py
    memory: 1024
    timeout: 60
    
  raiderbot_core:
    type: foundry_function
    path: palantir-functions/raiderbot_core.py
    memory: 4096
    timeout: 300
    environment:
      OPENAI_API_KEY: ${FOUNDRY_SECRET:openai_api_key}
      MAX_SPEED_LIMIT: "60"
      LANGUAGE_SUPPORT: "en,es"

# Transform configuration
transforms:
  snowflake_ingestion:
    type: foundry_transform
    path: palantir-transforms/snowflake_ingestion.py
    schedule: "*/15 * * * *"
    database: MCLEOD_DB
    schema: dbo
    dependencies:
      - snowflake_connection
      
  kpi_calculations:
    type: foundry_transform
    path: palantir-transforms/kpi_calculations.py
    schedule: "*/5 * * * *"
    dependencies:
      - raider_deliveries
      - raider_drivers
      - raider_vehicles

# Application configuration
applications:
  raiderbot_chat:
    type: foundry_application
    path: applications/chat
    port: 3000
    environment:
      NODE_ENV: production
      REACT_APP_API_URL: ${FOUNDRY_URL}/api/v1

# Security configuration
security:
  authentication: required
  authorization:
    type: role_based
    roles:
      - admin
      - dispatcher
      - driver
      - analyst

# Monitoring configuration
monitoring:
  metrics:
    - response_time
    - request_count
    - error_rate
  alerts:
    - type: response_time
      threshold: 2000  # ms
    - type: error_rate
      threshold: 0.01  # 1%

# Development configuration
development:
  local_development: enabled
  hot_reload: enabled
  debug_logging: enabled 