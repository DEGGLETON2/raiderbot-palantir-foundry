#!/bin/bash

# =============================================================================
# RaiderBot Foundry Deployment Script
# Complete deployment automation for Cursor execution
# =============================================================================

echo "üêï Starting RaiderBot Foundry Platform Deployment..."
echo "=================================================="

# Check if Foundry CLI is installed
if ! command -v foundry &> /dev/null; then
    echo "‚ùå Foundry CLI not found. Please install Foundry CLI first."
    echo "Visit: https://docs.palantir.com/foundry/cli/"
    exit 1
fi

echo "‚úÖ Foundry CLI found. Proceeding with deployment..."

# =============================================================================
# STEP 1: Create and Configure Workspace
# =============================================================================
echo ""
echo "üèóÔ∏è  STEP 1: Creating Foundry Workspace..."
echo "----------------------------------------"

foundry workspace create raider-express-operations
if [ $? -eq 0 ]; then
    echo "‚úÖ Workspace 'raider-express-operations' created successfully"
else
    echo "‚ö†Ô∏è  Workspace may already exist, continuing..."
fi

foundry workspace set-default raider-express-operations
echo "‚úÖ Set 'raider-express-operations' as default workspace"

# =============================================================================
# STEP 2: Deploy Ontology Objects
# =============================================================================
echo ""
echo "üîó STEP 2: Deploying Ontology Objects..."
echo "----------------------------------------"

echo "Deploying object types..."
foundry ontology deploy ontology/objects/
if [ $? -eq 0 ]; then
    echo "‚úÖ Object types deployed successfully"
    echo "   - Driver, Vehicle, Delivery, Route, SafetyIncident, Customer"
else
    echo "‚ùå Failed to deploy object types"
    exit 1
fi

echo "Deploying link types (relationships)..."
foundry ontology deploy ontology/link_types/
if [ $? -eq 0 ]; then
    echo "‚úÖ Link types deployed successfully"
    echo "   - DriverOperatesVehicle, DriverCompletesDelivery, etc."
else
    echo "‚ùå Failed to deploy link types"
    exit 1
fi

# =============================================================================
# STEP 3: Deploy Data Transforms
# =============================================================================
echo ""
echo "‚ö° STEP 3: Deploying Data Transforms..."
echo "-------------------------------------"

echo "Deploying Snowflake ingestion transform..."
foundry transforms deploy transforms/snowflake_ingestion.py
if [ $? -eq 0 ]; then
    echo "‚úÖ Snowflake ingestion transform deployed"
    echo "   - Driver, Vehicle, Delivery, Route data sync"
else
    echo "‚ùå Failed to deploy Snowflake ingestion transform"
    exit 1
fi

echo "Deploying KPI calculations transform..."
foundry transforms deploy transforms/kpi_calculations.py
if [ $? -eq 0 ]; then
    echo "‚úÖ KPI calculations transform deployed"
    echo "   - Executive dashboard metrics, driver performance"
else
    echo "‚ùå Failed to deploy KPI calculations transform"
    exit 1
fi

# =============================================================================
# STEP 4: Deploy AI Functions
# =============================================================================
echo ""
echo "ü§ñ STEP 4: Deploying AI Functions..."
echo "-----------------------------------"

echo "Deploying route optimization function..."
foundry functions deploy functions/route_optimization.py
if [ $? -eq 0 ]; then
    echo "‚úÖ Route optimization function deployed"
    echo "   - TSP algorithm with 60mph safety compliance"
else
    echo "‚ùå Failed to deploy route optimization function"
    exit 1
fi

echo "Deploying safety scoring function..."
foundry functions deploy functions/safety_scoring.py
if [ $? -eq 0 ]; then
    echo "‚úÖ Safety scoring function deployed"
    echo "   - Comprehensive driver safety intelligence"
else
    echo "‚ùå Failed to deploy safety scoring function"
    exit 1
fi

echo "Deploying AI chat handler function..."
foundry functions deploy functions/ai_chat_handler.py
if [ $? -eq 0 ]; then
    echo "‚úÖ AI chat handler function deployed"
    echo "   - RaiderBot German Shepherd AI assistant"
else
    echo "‚ùå Failed to deploy AI chat handler function"
    exit 1
fi

# =============================================================================
# STEP 5: Configure Transform Schedules
# =============================================================================
echo ""
echo "‚è∞ STEP 5: Configuring Transform Schedules..."
echo "--------------------------------------------"

echo "Setting up Snowflake ingestion schedule (every 15 minutes)..."
foundry transforms schedule transforms/snowflake_ingestion.py --cron "*/15 * * * *"

echo "Setting up KPI calculations schedule (every 5 minutes)..."
foundry transforms schedule transforms/kpi_calculations.py --cron "*/5 * * * *"

echo "‚úÖ Transform schedules configured"

# =============================================================================
# STEP 6: Deploy Chat Interface
# =============================================================================
echo ""
echo "üí¨ STEP 6: Deploying RaiderBot Chat Interface..."
echo "-----------------------------------------------"

if [ -d "applications/dashboard" ]; then
    cd applications/dashboard
    
    echo "Installing dependencies..."
    npm install
    if [ $? -eq 0 ]; then
        echo "‚úÖ Dependencies installed"
    else
        echo "‚ùå Failed to install dependencies"
        exit 1
    fi
    
    echo "Building React application..."
    npm run build
    if [ $? -eq 0 ]; then
        echo "‚úÖ React application built successfully"
    else
        echo "‚ùå Failed to build React application"
        exit 1
    fi
    
    echo "Deploying to Foundry..."
    foundry apps deploy raiderbot-chat --port 3000
    if [ $? -eq 0 ]; then
        echo "‚úÖ RaiderBot chat interface deployed"
    else
        echo "‚ö†Ô∏è  Chat interface deployment may require manual configuration"
    fi
    
    cd ../..
else
    echo "‚ö†Ô∏è  Dashboard application directory not found, skipping chat deployment"
fi

# =============================================================================
# STEP 7: Verification and Testing
# =============================================================================
echo ""
echo "üß™ STEP 7: Running Verification Tests..."
echo "---------------------------------------"

echo "Testing workspace configuration..."
foundry workspace info
echo "‚úÖ Workspace verification complete"

echo "Testing ontology deployment..."
foundry ontology list
echo "‚úÖ Ontology verification complete"

echo "Testing transform deployment..."
foundry transforms list
echo "‚úÖ Transform verification complete"

echo "Testing function deployment..."
foundry functions list
echo "‚úÖ Function verification complete"

# =============================================================================
# DEPLOYMENT COMPLETE
# =============================================================================
echo ""
echo "üéâ RaiderBot Foundry Platform Deployment Complete!"
echo "================================================="
echo ""
echo "üêï RaiderBot Status:"
echo "   ‚úÖ Workspace: raider-express-operations"
echo "   ‚úÖ Ontology: 6 object types + relationships deployed"
echo "   ‚úÖ Transforms: Data ingestion + KPI calculations scheduled"
echo "   ‚úÖ Functions: Route optimization + Safety scoring + AI chat"
echo "   ‚úÖ Chat Interface: React application deployed"
echo ""
echo "üìä Available Datasets:"
echo "   - ri.foundry.main.dataset.raider_drivers"
echo "   - ri.foundry.main.dataset.raider_vehicles"
echo "   - ri.foundry.main.dataset.raider_deliveries"
echo "   - ri.foundry.main.dataset.raider_routes"
echo "   - ri.foundry.main.dataset.safety_incidents"
echo "   - ri.foundry.main.dataset.customers"
echo "   - ri.foundry.main.dataset.raider_kpi_dashboard"
echo ""
echo "ü§ñ RaiderBot Capabilities:"
echo "   üêï German Shepherd AI personality with safety-first focus"
echo "   üåç Bilingual English/Spanish support"
echo "   üìä Real-time dashboard generation"
echo "   üó∫Ô∏è AI-powered route optimization (60mph compliance)"
echo "   üõ°Ô∏è Comprehensive safety scoring and recommendations"
echo "   üìã Document learning and multimodal processing"
echo ""
echo "üöÄ Next Steps:"
echo "   1. Access RaiderBot chat interface at your Foundry URL"
echo "   2. Upload sample data to test transforms"
echo "   3. Try asking RaiderBot: 'Show me today's delivery performance'"
echo "   4. Test dashboard generation: 'Create an executive dashboard'"
echo ""
echo "Woof! RaiderBot is ready to serve Raider Express! üêï"